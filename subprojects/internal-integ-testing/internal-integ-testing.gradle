/*
 * Copyright 2011 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
dependencies {
    compile libraries.groovy
    compile project(":internalTesting")
    compile project(':cli')
    compile project(':launcher')
    compile project(':native')
    compile libraries.jetty
    compile module("org.littleshoot:littleproxy:0.4") {
        dependency libraries.slf4j_api
        dependency "org.jboss.netty:netty:3.2.4.Final"
    }
    compile "org.apache.sshd:sshd-core:0.6.0"
}

useTestFixtures(sourceSet: 'main')
useClassycle()

task prepareVersionsInfo(type: PrepareVersionsInfo) {
   url = "http://services.gradle.org/versions/all"
   destDir = generatedResourcesDir
   destFileName = "all-released-versions.json"
   offline = gradle.startParameter.offline
}

sourceSets.main.output.dir prepareVersionsInfo.destDir, builtBy: prepareVersionsInfo

class PrepareVersionsInfo extends DefaultTask {
   File destDir
   String destFileName
   String url
   boolean offline

   @TaskAction void prepareVersions() {
       if (offline) {
           logger.warn("Versions information will not be downloaded because --offline switch is used.\n"
                   + "Without the version information certain integration tests may fail or use outdated version details.")
           return
       }
       logger.info "Downloading the released versions from: $url"

       def theUrl = "http://services.gradle.org/versions/all"
       def json
       try {
           json = new URL(theUrl).text
       } catch (UnknownHostException e) {
           throw new GradleException("Unable to acquire versions info. I've tried this url: '$theUrl'.\n"
                   + "If you don't have the network connection please run with '--offline' or exclude this task from execution via '-x'."
                   , e)
       }

       def destFile = new File(destDir, destFileName)
       assert destDir.mkdirs() || destDir.exists() : "Problems creating output directory for $name. Attempted to create $destDir"
       destFile.text = json

       logger.info "Saved released versions information in: $destFile"
   }
}